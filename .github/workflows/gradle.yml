name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      ## jdk setting
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin' # https://github.com/actions/setup-java

      ## gradle caching
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            

      ## create application-database.yaml
      - name: make application-database.yaml
        run: |
          ## create application-database.yaml
          cd ./src/main/resources
          
          # application-database.yaml 파일 생성
          touch ./application-aws.yml
          
          # GitHub-Actions 에서 설정한 값을 application-database.yaml 파일에 쓰기
          echo "${{ secrets.DATABASE }}" >> ./application-aws.yml
        shell: bash

      ## gradle build
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew


      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 # buildx 설정

      # 웹 이미지 빌드 및 도커허브에 push

      - name: Docker Hub 로그인 # (3)
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}


      ## 도커 이미지 빌드,푸쉬

      - uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_REPO }}/monggeul_docker:latest
          cache-from: type=gha,scope=build-main
          cache-to: type=gha,mode=max,scope=build-main

      ## docker compose up
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            docker rm -f $(docker ps -qa)
            docker rmi ${{ secrets.DOCKER_REPO }}/monggeul_docker            
            docker pull ${{ secrets.DOCKER_REPO }}/monggeul_docker 
            docker-compose up -d
