# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest # (3).OS환경

    steps:
      - name: Checkout
        uses: actions/checkout@v2 # (4).코드 check out

      - name: Set up JDK 11
        uses: actions/setup-java@v2 # (5). 자바 설치
        with:
            java-version: '11'
            distribution: 'adopt'


      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew


      - name: Build with Gradle
        run: ./gradlew clean build


      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00" # (8).build 시점의 시간확보

      - name: Show Current Time
        run: echo "CurrentTime=$"


        ## 웹 이미지 빌드 및 도커허브에 push
      - name: web docker build and push
        run: |
              docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
              docker build -t ${{ secrets.DOCKER_REPO }}/monggeul-docker-web .
              docker push ${{ secrets.DOCKER_REPO }}/monggeul-docker-web

      ## docker compose up
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
                host: ${{ secrets.HOST }}
                username: ubuntu
                key: ${{ secrets.KEY }}
                script: |
                     sudo docker rm -f $(docker ps -qa)
                     sudo docker pull ${{ secrets.DOCKER_REPO }}/monggeul-docker-web
                     sudo docker pull ${{ secrets.DOCKER_REPO }}/monggeul-docker-nginx
                     docker-compose up -d
                     docker image prune -f

